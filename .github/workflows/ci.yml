name: Java CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Verify Java and Maven versions
        run: |
          java -version
          mvn -version

      - name: Clean and compile
        run: mvn clean compile

      - name: Copy dependencies
        run: mvn dependency:copy-dependencies

      - name: Build JAR package
        run: mvn clean package -DskipTests

      - name: Run Unit Tests
        run: mvn test

      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: jar-artifacts
          path: target/*.jar

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: target/surefire-reports/

  integration-test:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: jar-artifacts
          path: target/

      - name: Build and compile for integration tests
        run: |
          mvn clean compile
          mvn dependency:copy-dependencies

      - name: Start server in background
        run: |
          java -cp "target/classes:target/dependency/*" RestApiServer &
          echo $! > server.pid
          sleep 10

      - name: Wait for server to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8080/people; do sleep 2; done'

      - name: Run API Integration Tests
        run: |
          echo "Testing GET /people endpoint..."
          curl -f http://localhost:8080/people
          
          echo "Testing POST /people endpoint..."
          curl -f -X POST http://localhost:8080/people \
            -H "Content-Type: application/json" \
            -d '{"name": "CI Test User", "dni": "12345678A", "age": 25}'
          
          echo "Testing GET /people/{dni} endpoint..."
          curl -f http://localhost:8080/people/12345678A
          
          echo "Testing PUT /people/{dni} endpoint..."
          curl -f -X PUT http://localhost:8080/people/12345678A \
            -H "Content-Type: application/json" \
            -d '{"name": "CI Test User Updated", "dni": "12345678A", "age": 26}'
          
          echo "Testing DELETE /people/{dni} endpoint..."
          curl -f -X DELETE http://localhost:8080/people/12345678A
          
          echo "All API tests passed!"

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven

      - name: Run OWASP Dependency Check
        run: |
          mvn org.owasp:dependency-check-maven:check
        continue-on-error: true

      - name: Upload security scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-scan-results
          path: target/dependency-check-report.html

  code-quality:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven

      - name: Run SpotBugs analysis
        run: |
          mvn compile spotbugs:check
        continue-on-error: true

      - name: Generate project info
        run: |
          mvn site:site -DgenerateReports=false

      - name: Upload code quality results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: code-quality-results
          path: target/site/
